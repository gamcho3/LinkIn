{"ast":null,"code":"var _jsxFileName = \"/Users/bag-yongjin/Desktop/myapp/movieConnecter/client/src/component/posts/CommentItem.js\";\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\nimport classes from \"./CommentItem.module.css\";\nimport { deleteComment } from \"../../actions/post\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentItem = ({\n  comment,\n  postId,\n  deleteComment,\n  auth\n}) => {\n  const {\n    name,\n    time,\n    text,\n    _id: id,\n    user\n  } = comment;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.top,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Moment, {\n          format: \"MM/DD\",\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes[\"del-box\"],\n      children: auth.user._id === user ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          maxLength: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteComment(postId, id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CommentItem;\nCommentItem.propTypes = {\n  comment: PropTypes.object.isRequired,\n  postId: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  deleteComment\n})(CommentItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentItem\");","map":{"version":3,"sources":["/Users/bag-yongjin/Desktop/myapp/movieConnecter/client/src/component/posts/CommentItem.js"],"names":["React","Fragment","PropTypes","Moment","classes","deleteComment","connect","CommentItem","comment","postId","auth","name","time","text","_id","id","user","container","top","propTypes","object","isRequired","string","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AACA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,MAAX;AAAmBJ,EAAAA,aAAnB;AAAkCK,EAAAA;AAAlC,CAAD,KAA8C;AAChE,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA,GAAG,EAAEC,EAAzB;AAA6BC,IAAAA;AAA7B,MAAsCR,OAA5C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACa,SAAxB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEb,OAAO,CAACc,GAAxB;AAAA,8BACE;AAAA,kBAAKP;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAC,OAAf;AAAA,oBAAwBC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAA,6BACE;AAAA,kBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE;AAAK,MAAA,SAAS,EAAET,OAAO,CAAC,SAAD,CAAvB;AAAA,gBACGM,IAAI,CAACM,IAAL,CAAUF,GAAV,KAAkBE,IAAlB,gBACC,QAAC,QAAD;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,SAAS,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAMX,aAAa,CAACI,MAAD,EAASM,EAAT,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAMC;AAPJ;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA1BD;;KAAMR,W;AA4BNA,WAAW,CAACY,SAAZ,GAAwB;AACtBX,EAAAA,OAAO,EAAEN,SAAS,CAACkB,MAAV,CAAiBC,UADJ;AAEtBZ,EAAAA,MAAM,EAAEP,SAAS,CAACoB,MAAV,CAAiBD;AAFH,CAAxB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCd,EAAAA,IAAI,EAAEc,KAAK,CAACd;AADsB,CAAZ,CAAxB;;AAIA,eAAeJ,OAAO,CAACiB,eAAD,EAAkB;AAAElB,EAAAA;AAAF,CAAlB,CAAP,CAA4CE,WAA5C,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\nimport classes from \"./CommentItem.module.css\";\nimport { deleteComment } from \"../../actions/post\";\nimport { connect } from \"react-redux\";\nconst CommentItem = ({ comment, postId, deleteComment, auth }) => {\n  const { name, time, text, _id: id, user } = comment;\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.top}>\n        <h3>{name}</h3>\n        <span>\n          <Moment format=\"MM/DD\">{time}</Moment>\n        </span>\n      </div>\n      <div>\n        <p>{text}</p>\n      </div>\n      <div className={classes[\"del-box\"]}>\n        {auth.user._id === user ? (\n          <Fragment>\n            <input type=\"password\" maxLength=\"4\" />\n            <button onClick={() => deleteComment(postId, id)}>X</button>\n          </Fragment>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nCommentItem.propTypes = {\n  comment: PropTypes.object.isRequired,\n  postId: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\n"]},"metadata":{},"sourceType":"module"}